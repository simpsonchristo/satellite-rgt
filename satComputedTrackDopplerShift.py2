#!/usr/bin/env python2
# -*- coding: utf-8 -*-
#Computed Track to Adjust for Doppler Shift
#SimpsonAerospace (c) 2019
import numpy as np
from setupScAndGs import loadMostRecentTle
from setupTimeEphem import timeEphem
import csv
from j2potential import j2potential
from dopri import dopri
#import gnuradio
#------------------------------------------------------------------------------
##Load state and time
chosensat,  UAGroundStation,  timetype = loadMostRecentTle(satgroup = 'noaa', satellite=33591)
tephem,  t0 = timeEphem(timetype,  days=1., dt=30.)

##Generate ephemeris using SGP4
#(GCRS) Geocentric Celestial Reference System
X = chosensat.at(tephem)
#Subpoint (ground track)
subpoint = X.subpoint()
lat = subpoint.latitude
lon = subpoint.longitude
alt = subpoint.elevation

with open('noaa19latlonalt.csv','w') as csvfile:
    writerfun = csv.writer(csvfile)
    for i in range(len(lat._degrees)):
        writerfun.writerow([lat._degrees[i],  lon._degrees[i],  alt.km[i]])
#topocentric
#TODO: form topocentric calculation using observe instead of at

##generate ephemeris using J2 potential
Xj2skyfield = chosensat.at(timetype.utc(t0))
xcomj2,  ycomj2,  zcomj2 = Xj2skyfield.position.km
xdotj2,  ydotj2,  zdotj2 = Xj2skyfield.velocity.km_per_s
print ('The initial position of the satellite is %.2f, %.2f, %.2f km' % (xcomj2,  ycomj2,  zcomj2))
print('The initial velocity of the satellite is %.2f, %.2f, %.2f km/s' % (xdotj2,  ydotj2,  zdotj2))


#tout,  Xout = dopri(FUNCTION,  [t0 tf],  TIMESTEP,  X0)
#tj2,  Xj2 = dopri(j2potential,  [0, 86400],  30, Xj2skyfield)

